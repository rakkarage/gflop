name: Godot Build and Deploy
on:
  workflow_dispatch:
concurrency:
  group: godot_build_and_deploy
  cancel-in-progress: false
permissions:
  contents: read
  pages: write
  id-token: write
env:
  GODOT_VERSION: 4.3
  FILE_NAME: ${{ github.event.repository.name }}
jobs:
  setup: # cache godot and templates
    runs-on: ubuntu-latest
    steps:
      - name: Cache
        id: godot-cache
        uses: actions/cache@v4
        with:
          path: |
            ./godot
            ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable
          key: '${{ runner.os }}-Godot-${{ env.GODOT_VERSION }}'
      - name: Cache Godot
        if: steps.godot-cache.outputs.cache-hit != 'true'
        run: |
          curl -L -o godot.zip https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/Godot_v${GODOT_VERSION}-stable_linux.x86_64.zip
          unzip -q godot.zip
          mv Godot_v${GODOT_VERSION}-stable_linux.x86_64 godot
          chmod +x godot
      - name: Cache Godot Templates
        if: steps.godot-cache.outputs.cache-hit != 'true'
        run: |
          curl -L -o templates.zip https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/Godot_v${GODOT_VERSION}-stable_export_templates.tpz
          unzip -q templates.zip
          mkdir -v -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          mv templates/* ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  build: # build godot for 'all' platforms
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: 'Windows Desktop'
            dir: windows
            file: $FILE_NAME
            ext: exe
          - target: Linux
            dir: linux
            file: $FILE_NAME
            ext: x86_64
          - target: macOS
            dir: mac
            file: $FILE_NAME
            ext: zip
          - target: Web
            dir: web
            file: index
            ext: html
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Restore
        id: godot-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ./godot
            ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable
          key: '${{ runner.os }}-Godot-${{ env.GODOT_VERSION }}'
      - name: Import
        run: ./godot --headless --verbose --editor --quit
      - name: Export
        run: |
          mkdir -v -p build/${{ matrix.dir }}
          ./godot --headless --verbose --export-release '${{ matrix.target }}' build/${{ matrix.dir }}/${{ matrix.file }}.${{ matrix.ext }}
      - name: Upload Web
        if: matrix.target == 'Web'
        uses: actions/upload-pages-artifact@v3
        with:
          name: '${{ matrix.dir }}'
          path: 'build/${{ matrix.dir }}'
      - name: Upload Not Web
        if: matrix.target != 'Web'
        uses: actions/upload-artifact@v4
        with:
          name: '${{ matrix.dir }}'
          path: 'build/${{ matrix.dir }}'
  clean: # delete old github pages deployments
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Delete
        uses: strumwolf/delete-deployment-environment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: github-pages
          onlyRemoveDeployments: true
  deploy: # deploy web artifact to github pages
    needs: [build, clean]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: '${{ steps.deployment.outputs.page_url }}'
    steps:
      - name: Configure
        uses: actions/configure-pages@v5
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: web
