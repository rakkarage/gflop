name: Godot to GitHub Pages
on:
  workflow_dispatch:
concurrency:
  group: pages
  cancel-in-progress: false
permissions:
  contents: read
  pages: write
  id-token: write
env:
  GODOT_VERSION: 4.3
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Download Godot
        run: |
          curl -L -o godot.zip https://downloads.tuxfamily.org/godotengine/${{ env.GODOT_VERSION }}/Godot_v${{ env.GODOT_VERSION }}-stable_linux_x86_64.64.zip
          unzip -q godot.zip
          mv Godot_v${{ env.GODOT_VERSION }}-stable_linux.x86_64 godot
          chmod +x godot
      - name: Download Godot Templates
        run: |
          curl -L -o templates.zip https://downloads.tuxfamily.org/godotengine/${{ env.GODOT_VERSION }}/Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
          unzip -q templates.zip
          mkdir -v -p ~/.local/share/godot/export_templates
          mv templates/* ~/.local/share/godot/export_templates
      - name: Import
        run: |
          godot --headless --verbose --editor --quit
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            godot
            .godot
            ~/.local/share/godot/export_templates
          key: ${{ runner.os }}-godot-${{ env.GODOT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-godot-
  build:
    needs: setup
    runs-on: ubuntu-latest
    env:
      FILE_NAME: gflop
    strategy:
      matrix:
        include:
          - target: 'Windows Desktop'
            dir: windows
            file: $FILE_NAME
            ext: exe
          - target: Linux
            dir: linux
            file: $FILE_NAME
            ext: x86_64
          - target: macOS
            dir: mac
            file: $FILE_NAME
            ext: zip
          - target: Web
            dir: web
            file: index
            ext: html
    steps:
      - name: Restore Godot Setup
        uses: actions/cache@v3
        with:
          path: |
            godot
            .godot
            ~/.local/share/godot/export_templates
          key: ${{ runner.os }}-godot-${{ env.GODOT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-godot-
      - name: Export
        run: |
          mkdir -v -p build/${{ matrix.dir }}
          godot --headless --verbose --export-release '${{ matrix.target }}' build/${{ matrix.dir }}/${{ matrix.file }}.${{ matrix.ext }}
      - name: Upload Web
        if: matrix.target == 'Web'
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: 'build/${{ matrix.dir }}'
      - name: Upload Not Web
        if: matrix.target != 'Web'
        uses: actions/upload-artifact@v4
        with:
          name: '${{ matrix.dir }}'
          path: 'build/${{ matrix.dir }}'
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: '${{ steps.deployment.outputs.page_url }}'
    steps:
      - name: Configure
        uses: actions/configure-pages@v5
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
